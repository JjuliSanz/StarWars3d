/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/models/nabooStarfighter/naboo_starfighter.glb 
Author: StarWars-Universe (https://sketchfab.com/SWU)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/naboo-starfighter-02cc1149843c4f9c90821a95b39f1dc9
Title: Naboo Starfighter
*/

import React, { useRef, useState, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'

export function NabooStarfighter(props) {
  const { nodes, materials } = useGLTF('./models/ep1/nabooStarfighter/naboo_starfighter.glb');
  const [modelLoaded, setModelLoaded] = useState(false);

  useEffect(() => {
    const timeoutId = setTimeout(() => {
      setModelLoaded(true);
    }, 20000);

    // Limpiar el temporizador si el componente se desmonta antes de que se cargue el modelo
    return () => clearTimeout(timeoutId);
  }, []); // El array vacío asegura que este efecto se ejecute solo una vez al montar el componente

  if (!modelLoaded) {
    return null; // O puedes devolver un indicador de carga aquí
  }

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group position={[288.004, 128.411, 12.37]}>
              <mesh geometry={nodes.Material1_29.geometry} material={materials.Engines_A} position={[-288.004, -128.411, -12.37]} rotation={[-Math.PI / 2, 0, 0]} />
              <mesh geometry={nodes.Material1_30.geometry} material={materials.Engines_B} position={[-288.004, -128.411, -12.37]} rotation={[-Math.PI / 2, 0, 0]} />
              <mesh geometry={nodes.Material1_31.geometry} material={materials.Engines_C} position={[23.069, -128.411, -12.37]} rotation={[-Math.PI / 2, 0, 0]} />
            </group>
          </group>
          <group position={[0, 49.744, -6.59]} rotation={[Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Material1.geometry} material={materials.Glass} position={[0, 6.59, 49.744]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_1.geometry} material={materials.Cockpit} position={[0, 6.59, 49.744]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_2.geometry} material={materials.Front_Panel_Grey} position={[0, 6.59, 49.744]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_3.geometry} material={materials.Cockpit} position={[0, 6.59, 49.744]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_4.geometry} material={materials.Cockpit} position={[0, 6.59, 49.744]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_5.geometry} material={materials.Cockpit} position={[0, 6.59, 49.744]} rotation={[-Math.PI / 2, 0, 0]} />
          </group>
          <group position={[-0.162, 16.178, -44.974]} rotation={[Math.PI / 2, 0, 0]}>
            <group position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]}>
              <mesh geometry={nodes.Material1_32.geometry} material={materials.Mat_Seats} />
              <mesh geometry={nodes.Material1_33.geometry} material={materials.Mat_Seats} />
              <mesh geometry={nodes.Material1_34.geometry} material={materials.Mat_Seats} />
            </group>
            <group position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]}>
              <mesh geometry={nodes.Material1_35.geometry} material={materials.Console_Top} />
              <mesh geometry={nodes.Material1_41.geometry} material={materials.Console_Top} />
              <mesh geometry={nodes.Material1_36.geometry} material={materials.Console_Front} />
              <mesh geometry={nodes.Material1_42.geometry} material={materials.Console_Front} />
              <mesh geometry={nodes.Material1_37.geometry} material={materials.Consolle_Side} />
              <mesh geometry={nodes.Material1_38.geometry} material={materials.Metal_Reflective} />
            </group>
            <mesh geometry={nodes.Material1_6.geometry} material={materials.Cockpit_Walls} position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_7.geometry} material={materials.Cockpit_Bow} position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_8.geometry} material={materials.Metal_Reflective} position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_9.geometry} material={materials.Seat_Back} position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_10.geometry} material={materials.Metal_Reflective} position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_11.geometry} material={materials.Seat_Back} position={[0.162, 44.974, 16.178]} rotation={[-Math.PI / 2, 0, 0]} />
          </group>
          <group position={[-1.655, 98.27, -139.183]} rotation={[Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Material1_12.geometry} material={materials.R2_Head} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_13.geometry} material={materials.R2_Panels_Top} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_14.geometry} material={materials.R2_Panels} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_15.geometry} material={materials.R2_Sensors_1} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_16.geometry} material={materials.R2_Sensors_2} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_17.geometry} material={materials.R2_Sensors_3} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_18.geometry} material={materials.R2_Sensors_4} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_19.geometry} material={materials.R2_Sensors_5} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_20.geometry} material={materials.R2_Sensors_6} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
            <mesh geometry={nodes.Material1_21.geometry} material={materials.R2_Sensors_7} position={[1.655, 139.183, 98.27]} rotation={[-Math.PI / 2, 0, 0]} />
          </group>
          <group scale={1.62}>
            <mesh geometry={nodes.Material1_24.geometry} material={materials.Hull_Ventral} />
            <mesh geometry={nodes.Material1_39.geometry} material={materials.Hull_Ventral} />
            <mesh geometry={nodes.Material1_40.geometry} material={materials.Hull_Ventral} />
          </group>
          <mesh geometry={nodes.Material1_22.geometry} material={materials.Hull_Dorsal_A} />
          <mesh geometry={nodes.Material1_23.geometry} material={materials.Hull_Dorsal_B} />
          <mesh geometry={nodes.Material1_25.geometry} material={materials.Cockpit} />
          <mesh geometry={nodes.Material1_26.geometry} material={materials.AMDS} />
          <mesh geometry={nodes.Material1_27.geometry} material={materials.Laser} />
          <mesh geometry={nodes.Material1_28.geometry} material={materials.Laser} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./models/ep1/nabooStarfighter/naboo_starfighter.glb')
