/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/models/ep7/starKiller/starKiller.glb 
Author: LC_3D Designs (https://sketchfab.com/lcopenhaver3608)
License: CC-BY-ND-4.0 (http://creativecommons.org/licenses/by-nd/4.0/)
Source: https://sketchfab.com/3d-models/starkiller-base-c7691ef963994de09423d1b895d6ffd1
Title: Starkiller Base
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'

export function StarKiller(props) {
  const { nodes, materials } = useGLTF('./models/ep7/starKiller/starkiller.glb')
  const [modelLoaded, setModelLoaded] = useState(false);

  useEffect(() => {
    const timeoutId = setTimeout(() => {
      setModelLoaded(true);
    }, 80000);

    // Limpiar el temporizador si el componente se desmonta antes de que se cargue el modelo
    return () => clearTimeout(timeoutId);
  }, []); // El array vacío asegura que este efecto se ejecute solo una vez al montar el componente

  if (!modelLoaded) {
    return null; // O puedes devolver un indicador de carga aquí
  }
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI, 0, 0]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.color_14541540} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.color_2829873} />
      </group>
    </group>
  )
}

useGLTF.preload('./models/ep7/starKiller/starkiller.glb')
